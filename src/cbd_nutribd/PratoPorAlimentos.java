/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cbd_nutribd;

import DB.GraphDB;
import DB.RelationalDB;
import Data.Prato;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Miguel
 */
public class PratoPorAlimentos extends javax.swing.JFrame {
    private DefaultListModel dlm = new DefaultListModel();
    private DefaultListModel dlmAdicionados = new DefaultListModel();
    private DefaultListModel dlmPratosEncontrados = new DefaultListModel();
    private List<String> ingredientes = new ArrayList<>();
    private List<String> ingredientesAdicionados = new ArrayList<>();
    private List<String> todosIngredientes = new ArrayList<>();
    private List<Integer> idsPratos = new ArrayList<>();
    /**
     * Creates new form PratoPorAlimentos
     */
    public PratoPorAlimentos() {
        initComponents();
        this.setTitle("Procurar Pratos por Alimentos");
        this.setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        RelationalDB relational = new RelationalDB();
        try {
            ingredientes = relational.getIngredientes("");
        } catch (SQLException ex) {
            Logger.getLogger(PratoPorAlimentos.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (String x : ingredientes) {
            todosIngredientes.add(x.toLowerCase());
        }

        ingredientes = new ArrayList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonPesquisar = new javax.swing.JButton();
        textIngrediente = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listPesquisa = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        listIngredientesAdicionados = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        listPratosEncontrados = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ApagarPesquisa = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        buttonPesquisar.setText("Pesquisar");
        buttonPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPesquisarActionPerformed(evt);
            }
        });

        textIngrediente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textIngredienteActionPerformed(evt);
            }
        });

        jLabel1.setText("Ingrediente");

        listPesquisa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listPesquisaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listPesquisa);

        listIngredientesAdicionados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listIngredientesAdicionadosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(listIngredientesAdicionados);

        listPratosEncontrados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listPratosEncontradosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(listPratosEncontrados);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        jLabel2.setText(">");

        jLabel3.setText("Ingredientes");

        jLabel4.setText("Pratos");

        ApagarPesquisa.setText("Apagar Pesquisa");
        ApagarPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ApagarPesquisaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textIngrediente))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(buttonPesquisar)
                        .addGap(117, 117, 117)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 250, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(105, 105, 105))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ApagarPesquisa)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonPesquisar)
                    .addComponent(textIngrediente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                        .addGap(231, 231, 231))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                            .addComponent(jScrollPane3)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(130, 130, 130)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(33, 33, 33)
                        .addComponent(ApagarPesquisa)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textIngredienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textIngredienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textIngredienteActionPerformed

    private void buttonPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPesquisarActionPerformed
        String ingrediente = textIngrediente.getText();
        
        
        ingredientes = filtrarIngredientes(ingrediente);
        dlm=new DefaultListModel();
        for(String x:ingredientes){
            dlm.addElement(x);
        }
        listPesquisa.setModel(dlm);
        
        textIngrediente.setText("");
    }//GEN-LAST:event_buttonPesquisarActionPerformed

    private void listIngredientesAdicionadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listIngredientesAdicionadosMouseClicked

    }//GEN-LAST:event_listIngredientesAdicionadosMouseClicked
    private List<String> filtrarIngredientes(String ingrediente){
        List<String> filtrados=new ArrayList<>();
        ingrediente = ingrediente.toLowerCase();
        for(String x: todosIngredientes){
            if(x.contains(ingrediente)){
                filtrados.add(x);
            }
        }
        return filtrados;
    }
    private void listPesquisaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listPesquisaMouseClicked

        int index = listPesquisa.getSelectedIndex();
        if (index!=-1){
            String ing =ingredientes.get(index);
            if(!dlmAdicionados.contains(ing)){
                ingredientesAdicionados.add(ing);
                dlmAdicionados.addElement(ing);
                listIngredientesAdicionados.setModel(dlmAdicionados);
            }
        }
        
        GraphDB graph= new GraphDB();
        RelationalDB relational = new RelationalDB();
        
        List<Integer> idsIngredientes = new ArrayList<>();
        
        List<Prato> pratos = new ArrayList<>();
        
        dlmPratosEncontrados=new DefaultListModel();
        
        for(String x: ingredientesAdicionados){
            try {
                idsIngredientes.add(relational.getIdAlimento(x));
            } catch (SQLException ex) {
                Logger.getLogger(PratoPorAlimentos.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
        idsPratos = graph.pratoByIngredientes(idsIngredientes);

        
        for(Integer x:idsPratos){
            try {
                pratos.add(relational.getPrato(x));
            } catch (SQLException ex) {
                Logger.getLogger(PratoPorAlimentos.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
            
        for(Prato x:pratos){
            if(!dlmPratosEncontrados.contains(x.getNome()))
                dlmPratosEncontrados.addElement(x.getNome());
        }
        
        listPratosEncontrados.setModel(dlmPratosEncontrados);
        if (pratos.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nenhum prato foi encontrado!");
            ApagarPesquisa.doClick();
        }
    }//GEN-LAST:event_listPesquisaMouseClicked

    private void listPratosEncontradosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listPratosEncontradosMouseClicked
        try {
            int index = listPratosEncontrados.getSelectedIndex();
            int idPratoSelected = idsPratos.get(index);
            if (evt.getClickCount() == 2 && idPratoSelected != -1) {
                ViewPlate view = new ViewPlate(idPratoSelected);
                view.setVisible(true);
            }
        }catch(ArrayIndexOutOfBoundsException ex) {}
    }//GEN-LAST:event_listPratosEncontradosMouseClicked

    private void ApagarPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ApagarPesquisaActionPerformed
        dlm.removeAllElements();
        dlmAdicionados.removeAllElements();
        dlmPratosEncontrados.removeAllElements();
        textIngrediente.setText("");
        idsPratos.removeAll(idsPratos);
        ingredientesAdicionados.removeAll(ingredientesAdicionados);
    }//GEN-LAST:event_ApagarPesquisaActionPerformed

    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PratoPorAlimentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PratoPorAlimentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PratoPorAlimentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PratoPorAlimentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PratoPorAlimentos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ApagarPesquisa;
    private javax.swing.JButton buttonPesquisar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> listIngredientesAdicionados;
    private javax.swing.JList<String> listPesquisa;
    private javax.swing.JList<String> listPratosEncontrados;
    private javax.swing.JTextField textIngrediente;
    // End of variables declaration//GEN-END:variables
}
